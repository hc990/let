# -*- coding: utf-8 -*-'''Created on 2012-3-19@author: zongzong'''from tornado.options import optionsfrom config import options_setupfrom db.mongo import Mongofrom tornado.options import defineimport stringimport uuidimport jsonimport datetimedef main():    from models.product import Product    from models.order import Order    from models.package import Package    #     from views.paginator import Paginator    from models.exchange import Exchange #     #     from datetime import datetime#     start = datetime(2010, 4, 1)#     end = datetime(2015, 5, 1)  #         for exchange in Exchange.get_status_exchanges(1):            need_do = []            orders = Order.get_working_orders(1, exchange['_id'])            for order in orders:                print order['custom_time']                product = Product.lookup(order['p_id'])                             exchange = Exchange.get_exchange(order['e_id'])                package = Package.lookup(order['package_id'])                                  #               need_do = need_do + json.dumps({'switch_name':exchange['ename'],'port':product['port'], 'bandwidth':order['bandwidth'], \#                           'port_name':product['port'], 'ipAddress':exchange['ipAddress'],'o_id':order['_id'] })                need_do.append(json.dumps({'switch_name':exchange['ename'], "port":product['port'], \                            "port_name":product['port'], "host":exchange['ipAddress'], \                            "bandwidth":order['bandwidth']}))                if len(need_do) > 0:                    cmd = json.dumps({"switch_name":exchange['ename'], "host":exchange['ipAddress'], 'orders':need_do})       #                     print cmd    print len(cmd)    print cmd    print '-----------'    keys = json.loads(cmd)    print keys['host']    print keys['orders']      ##################################################  #     if read(key_file):#             keys = json.loads(encrypt_util.decode(body))     if 1 == 1:            keys = json.loads(cmd)             host = keys['host']               username, password = json.loads(read(key_file))[host]  # here is the switch address             values = keys['orders']            switch_name = keys['switch_name']    ###################################################################                    #             switch_name = keys['switch_name']       #             port_name = keys['port_name']     #             bandwidth = keys['bandwidth']  #             vlan = keys['vlan']              response = do_command(switch_name,host, username, password, values)   def do_command(switch_name, host, username, password, values):    tm = switch_name(host, username, password, values)    tm.set_bandwidth()    return json.dumps({'response_code':'250'})  # 成功  #       a = datetime.datetime.now()#       print a #       b = datetime.datetime.now()#       #       print datetime.timedelta(days=1)# #       b = b+datetime.timedelta(days=5)#       print (b-a).days            #        #    begin_at= '02/28/2013 00:00'# #    b = #    print b# #    c = Mongo.db.ui['orders'].find()# #    for b in c:# #        print b#    Order.insert('111', '111', '111', 12, start, end) #    #    a = Mongo.db.ui['orders'].find({"begin_at": {"$lte": start}})#     for b in a :#         print b#            #    orders = Order.get_orders()#    for order in orders:#        product = Product.lookup(order['p_id'])#        exchange = Exchange.lookup(product['e_id']) #        print order#        print product#        print exchange#        #        print int(product['ctype'])*(100+int(order['percent']))/100#        print json.dumps({'switch_name':'TelnetManage9306',"vlan":product['vlan'],"port_name":product['port'], "host":exchange['ipAddress'], "bandwidth":int(product['ctype']) * (100 + int(order['percent'])) / 100})#         #        # #            response = rpc.call(json.dumps({'switch_name':'TelnetManage9306', "vlan":product['vlan'],# #                            "port_name":product['port'], "host":exchange['ipAddress'], "bandwidth":product['ctype']*order['percent']/100}))#        print 'set_bandwidth_job start at ', datetime.datetime.now()#        Order.finish_order(order['_id'])      #    a = string.maketrans('None', '','','')#    print a  #    u = Mongo.db.ui['users'].User.find({'roletype':2})#    us = [u for u in User.getUsers(2)]#    print us     #    user = User.instance('2222', '2222')#    Mongo.db.ui['user'].insert(user)#    users2 = Mongo.db.ui['users'].find()#    print '----'#    for user2 in Mongo.db.ui['users'].find():#         print user2#    Mongo.db.ui['users'].remove()#    users = [user2 for user2 in  Mongo.db.ui['users'].find()]#    print users#    print users#    print user.name() Mongo.db.ui.products.find_one({'_id' : uuid.UUID(c_id)})#    ws =  [({'cname':u['cname']},{'percent':u['percent']}) for u in Mongo.db.ui['bandwidths'].find({'p_id' : '2fdc94f0-fcde-11e1-b73a-005056c00008'})]#    custormers = [w for w in Mongo.db.ui['custormers'].find()]#    print custormers#    c = Mongo.db.ui.custormers.find_one({'_id' : uuid.UUID('a1287530-fc97-11e1-aef2-005056c00008')})#    print ws#    print json.dumps(ws)#    custormers = [w for w in Mongo.db.ui['custormers'].find({'_id':'liz', 'status':0})]#    print custormers    if __name__ == '__main__':    Mongo.create(host="211.147.81.50", port=options.db_port)#     Mongo.create(host='192.168.11.118', port=options.db_port)    main()#     print 'no service-policy input %sM' % 2